{$f-}

type TCutTask = TTask;

function TCutTask.__cut(): TTaskStatus;
var
  i, len: integer = 0;
  timer: TTimeMarker;
begin
  len := length(self.objectLocations);
  timer.start();
  while (playerManager.isActive()) and (timer.getTime() < 60000) and (not tabBackpack.isFull()) do
  begin
    if randomlyWait() and (not playerManager.useObject(self.objectSettings)) then
    begin
      playerManager.walkTo(self.objectLocations[inc(i) mod len], self.location);
      continue;
    end;


    if playerManager.waitWhileWorking() then
    begin
      if distance(playerManager.getPos(), self.objectLocations[i mod len]) > self.flag then
        playerManager.walkTo(self.objectLocations[i mod len], self.location);
      timer.start();
    end;
  end;

  if tabBackpack.isFull() then exit(TTaskStatus.DONE);
  exit(TTaskStatus.ERR);
end;

function CutTask(data: string): ^TCutTask;
var task: ^TCutTask;
begin
  new(task);
  task^.init('Cut', data, task^.__cut);
  exit(task);
end;
