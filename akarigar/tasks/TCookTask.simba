{$f-}

type TCookTask = TTask;

function TCookTask.__cook(): TTaskStatus;
var i, x, y, rawCount, burnedCount: integer = 0;
begin
  rawCount := tabBackpack.count();
  // Sometimes click the raw food and then the range.
  if (self.loopCount = 0) or (random() <= 0.1) then
    tabBackpack.getSlotBox(random(tabBackpack.count() + 1)).mouse(MOUSE_LEFT);

  if not playerManager.useObject(self.objectSettings) then exit(TTaskStatus.ERR);

  while (playerManager.randomlyWait(1000, 1500)) and
        (not productionScreen.clickStart()) and
        (inc(i) < self.tries) do;
  if (i >= self.tries) or (not tabBackpack.waitSlotPixelChange(tabBackpack.count(), gaussRangeInt(110000, 1300000)))
    then exit(TTaskStatus.ERR);

  burnedCount := rawCount - tabBackpack.count();
  if findColor(x, y, 65535, tabBackpack.getBounds()) then inc(burnedCount);
  resourceManager.updateResource(self.recipe.itemsIn[0].name, -burnedCount);

  exit(TTaskStatus.DONE);
end;

function CookTask(data: string): ^TCookTask;
var task: ^TCookTask;
begin
  new(task);
  task^.init('Cook', data, task^.__cook);
  exit(task);
end;

{$f+}
