{$include ../util/map.simba}
{$f-}

type TResourceManager = record
  __filePath, __nickname: string;
  __resources: TMap;
end;

var resourceManager: TResourceManager;

procedure TResourceManager.clear();
begin
  if self.__resources.isEmpty() then exit;

  self.saveResources();
  self.__resources.clear();
end;

procedure TResourceManager.removeResource(name: string);
begin
  self.__resources.remove(name);
  deleteIni(self.__nickname, name, self.__filePath);
end;

procedure TResourceManager.saveResources();
var
  i: integer;
  keyData: string;
  keys: TVariantSet;
begin
  keys := self.__resources.keys();
  for i := 0 to high(keys) do
  begin
    self.__write(keys[i], self.__resources.get(keys[i])^);
    keyData += string(keys[i]);
    if i < high(keys) then keyData += ',';
  end;
  self.__write('_keys', keyData);
end;

procedure TResourceManager.setup(nickname: string);
begin
  self.clear();
  self.__filePath := appPath + 'Scripts\' + __SCRIPT_NAME + '\resources.ini';
  self.__nickname := nickname;
  self.__resources.init(20);
  self.__loadResources();
end;

function TResourceManager.toString(): string;
var
  i: integer;
  str: string = '{';
  keys: TVariantSet;
begin
  keys := self.__resources.keys();
  for i := 0 to high(keys) do
  begin
    if i > 0 then str += ',';
    str += format('"%s":%d', [keys[i], self.__resources.get(keys[i])^]);
  end;
  exit(str + '}');
end;

procedure TResourceManager.updateResource(name: string; delta: integer);
var amount: ^Variant;
begin
  amount := self.__resources.get(name);

  // Add the resource if we don't have it stored
  if amount = nil then
  begin
    if delta > 0 then
      self.__resources.put(name, delta);
    exit;
  end;

  // Update the resouce, remove the resource if we run out of it
  amount^ += delta;
  if amount^ <= 0 then
  begin
    self.removeResource(name);
  end;
end;

procedure TResourceManager.__loadResources();
var
  i: integer;
  keyData: string;
  keys: TStringArray;
begin
  keyData := self.__read('_keys');
  if keyData = '' then exit;
  keys := explode(',', keyData);
  for i := 0 to high(keys) do
    self.__resources.put(keys[i], variant(strToInt(self.__read(keys[i]))));
end;

function TResourceManager.__read(key: string): string;
begin
  exit(readIni(self.__nickname, key, self.__filePath));
end;

procedure TResourceManager.__write(key, value: string);
begin
  writeIni(self.__nickname, key, value, self.__filePath);
end;
