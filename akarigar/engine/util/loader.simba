{$include_once ../core/activity.simba}
{$include_once ../../tasks/TBankTask.simba}
{$include_once ../../tasks/TBurnTask.simba}
{$include_once ../../tasks/TCookTask.simba}
{$include_once ../../tasks/TCutTask.simba}
{$include_once ../../tasks/TFishTask.simba}
{$f-}

function Task(name, data: string): PTask;
begin
  case name of
    'Bank': exit(BankTask(data));
    'Burn': exit(BurnTask(data));
    'Cook': exit(CookTask(data));
    'Cut': exit(CutTask(data));
    'Fish': exit(FishTask(data));
    else exit(nil);
  end;
end;

procedure TActivity.fromString(xml: string);
var
  i: integer;
  taskData: TStringArray;
begin
  // Process name, id & recipe
  self.name := between('name="', '"', xml);
  self.id := strToInt(between('id="', '"', xml));
  self.recipe.fromXml(between('<recipe>', '</recipe>', xml));

  // Process quota
  if pos('<quota>', xml) > 0 then
    self.quota := strToInt(between('<quota>', '</quota>', xml));

  // Process task data
  taskData := multiBetween(xml, '<task ', '</task>');
  for i := 0 to high(taskData) do
    self.appendTask(Task(between('name="', '"', taskData[i]), taskData[i]));
end;

function Activity(xml: string): PActivity;
var activity: PActivity;
begin
  if length(xml) = 0 then exit(nil);
  new(activity);
  activity^.fromString(xml);
  exit(activity);
end;

{$f+}
